{"version":3,"file":"static/js/418.d90d237e.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.js","components/errorMessage/ErrorMessage.js","components/errorGoBackButton/ErrorGobackButton.js","components/pages/SingleItemPage.js","services/MarvelService.js","hooks/http.hook.js"],"sourcesContent":["import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import ErrorGif from './error.gif';\n\nexport default function ErrorMessage() {\n    return (\n        <img style={{\n            display: 'block',\n            width: '250px',\n            height: '250px',\n            objectFit: 'contain',\n            margin: '0 auto'\n        }} src={ErrorGif} alt=\"Error Gif\" />\n    )\n}","import { Link, useHistory } from \"react-router-dom\";\n\nconst ErrorGoBackButton = () => {\n    const history = useHistory();\n    \n    if (history.length <= 2) {\n        return (\n            <button className=\"button button__main button__long\">\n                <div className=\"inner\">\n                    <Link to='/marvel_info/comics'>\n                        To comics list\n                    </Link>\n                </div>\n            </button>\n        )\n    }\n\n    return (\n        <button className=\"button button__main button__long\">\n            <div className=\"inner\" onClick={() => history.goBack()}>Go Back</div>\n        </button>\n    )\n}\n\nexport default ErrorGoBackButton;","import { useParams, Link, useHistory } from \"react-router-dom\";\nimport { useEffect, useState } from 'react';\nimport { Helmet } from \"react-helmet\";\n\nimport useMarvelService from '../../services/MarvelService';\nimport LoadingSpinner from '../spinner/LoadingSpinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport ErrorGoBackButton from \"../errorGoBackButton/ErrorGobackButton\";\nimport AppBanner from \"../appBanner/AppBanner\";\n\nimport './singleItemPage.scss';\n\nconst SingleItemPage = ({id, category}) => {\n    const renderParam = useParams()[id];\n    const [item, setItem] = useState(null);\n    const {loading, error, getSingleMarvelData, clearError, findCharByName} = useMarvelService();\n    \n    useEffect(() => {\n        updateItem();\n    }, [renderParam]);\n\n    const updateItem = () => {\n        clearError();\n        \n        if (category === 'characters') {\n            findCharByName(renderParam)\n            .then(setItem);\n        } else {\n            getSingleMarvelData('comics', renderParam)\n            .then(setItem);\n        }\n    }\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const goBackBtn = error ? <ErrorGoBackButton/> : null\n    const spinner = loading ? <LoadingSpinner/> : null;\n    const content = !(loading || error || !item) ? (category === 'comics' ? <ViewComic item={item}/> : <ViewCharacter item={item}/>) : null;\n\n\n    return (\n        <>\n            {errorMessage}\n            {goBackBtn}\n            {spinner}\n            {content}\n        </>\n    )\n}\n\nconst ViewComic = ({item}) => {\n    const {title, description, pageCount, language, price, thumbnail} = item;\n\n    return (\n        <>\n            <Helmet>\n                <meta\n                    name=\"description\"\n                    content={`Page of ${title}`}\n                />\n                <title>{title}</title>\n            </Helmet>\n            <AppBanner/>\n            <div className=\"single-item\">\n                <img src={thumbnail} alt={title} className=\"single-item__img\"/>\n                <div className=\"single-item__info\">\n                    <h2 className=\"single-item__name\">{title}</h2>\n                    <p className=\"single-item__descr\">{description}</p>\n                    <p className=\"single-item__descr\">{pageCount}</p>\n                    <p className=\"single-item__descr\">Language: {language}</p>\n                    <div className=\"single-item__price\">{price}</div>\n                </div>\n                <Link to='/marvel_info/comics' className=\"single-item__back\">Back to all</Link>\n            </div>\n        </>\n    )\n}\n\nconst ViewCharacter = ({item}) => {\n    const {name, description, thumbnail} = item;\n\n    return (\n        <>\n            <Helmet>\n                <meta\n                    name=\"description\"\n                    content={`Page of ${name}`}\n                />\n                <title>{name}</title>\n            </Helmet>\n            <AppBanner/>\n            <div className=\"single-item\">\n                <img src={thumbnail} alt={name} className=\"single-item__img\"/>\n                <div className=\"single-item__info\">\n                    <h2 className=\"single-item__name\">{name}</h2>\n                    <p className=\"single-item__descr\">{description}</p>\n                </div>\n                <Link to='/marvel_info' className=\"single-item__back\">Back to all</Link>\n            </div>\n        </>\n    )\n}\n\nexport default SingleItemPage;","import { useHttp } from \"../hooks/http.hook\";\n\nconst useMarvelService = () => {\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    const _apiKey = 'apikey=df45cf660f835fae11e3961d7b9575b8';\n    const _baseOffset = 215;\n\n    const {loading, request, error, clearError} = useHttp();\n\n    const getMarvelData = async (data, limit, offset = _baseOffset) => {\n        const res = await request(`${_apiBase}${data}?limit=${limit}&offset=${offset}&${_apiKey}`);\n        \n        if (data === 'characters') {\n            return await res.data.results.map(_transformCharacter);\n        }\n\n        return await res.data.results.map(_transformComics);\n    }\n\n    const getSingleMarvelData = async (data, id) => {\n        const res = await request(`${_apiBase}${data}/${id}?${_apiKey}`);\n        \n        if (data === 'characters') {\n            return _transformCharacter(res.data.results[0]);\n        }\n\n        return _transformComics(res.data.results[0]);\n    }\n\n    const findCharByName = async (name) => {\n        const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`)\n        \n        return _transformCharacter(res.data.results[0]);\n    }\n\n    const _transformCharacter = (char) => {\n        let description = char.description;\n\n        if (description.length <= 0) {\n            description = 'There is no information about this character';\n        }\n\n        if (description.length > 150) {\n            description = description.slice(0, 150) + '...';\n        }\n\n        return {\n            id: char.id,\n            name: char.name,\n            description: description,\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url,\n            comics: char.comics.items\n        }\n    }\n\n    const _transformComics = (item) => {\n        return {\n            id: item.id,\n            title: item.title,\n            description: item.description || \"There is no description\",\n            pageCount: item.pageCount ? `${item.pageCount} p.` : \"No information about the number of pages\", \n            price: item.prices[0].price === 0 ? 'NOT AVAILABLE' : (item.prices[0].price + '$'),\n            language: item.textObjects.language || \"en-us\",\n            thumbnail: item.thumbnail.path + '.' + item.thumbnail.extension,\n            url: item.urls[0].url\n        }\n    }\n\n    const checkAvailableImage = (path) => {\n        let imageStyle = {\n            objectFit : 'fill'\n        };\n\n        if(/image_not_available/gi.test(path)) {\n            imageStyle.objectFit = 'unset';\n        }\n\n        return imageStyle;\n    }\n\n    return {loading, error, getMarvelData, getSingleMarvelData, checkAvailableImage, clearError, findCharByName}\n}\n\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\n\nexport const useHttp = () => {\n    const [loading, setloading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type' : 'application/json'}) => {\n\n        setloading(true);\n\n        try {\n            const response = await fetch(url, {method, body, headers});\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.state}`);\n            }\n            const data = await response.json();\n\n            setloading(false);\n            \n            if (data.data.results.length === 0) {\n                throw new Error(`No matches found`);\n            }\n\n            return data;\n        } catch (error) {\n            setloading(false);\n            setError(error.message);\n\n            throw error;\n        }\n\n    }, [])\n\n    const clearError = useCallback(() => {\n        setError(null);\n    }, [])\n\n    return {loading, error, request, clearError};\n}"],"names":["_jsxs","className","children","_jsx","src","avengers","alt","avengersLogo","ErrorMessage","style","display","width","height","objectFit","margin","ErrorGif","history","useHistory","length","Link","to","onClick","goBack","ViewComic","_ref2","item","title","description","pageCount","language","price","thumbnail","_Fragment","Helmet","name","content","concat","AppBanner","ViewCharacter","_ref3","_ref","id","category","renderParam","useParams","_useState","useState","_useState2","_slicedToArray","setItem","_useMarvelService","useMarvelService","loading","error","getSingleMarvelData","clearError","findCharByName","useEffect","updateItem","then","errorMessage","goBackBtn","ErrorGoBackButton","spinner","LoadingSpinner","_apiBase","_apiKey","_useHttp","setloading","_useState3","_useState4","setError","request","useCallback","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","undefined","fetch","sent","ok","Error","state","json","results","abrupt","t0","message","stop","_x","apply","useHttp","getMarvelData","limit","offset","res","map","_transformCharacter","_transformComics","_x2","_callee2","_context2","_x3","_x4","_callee3","_context3","_x5","char","slice","path","extension","homepage","urls","wiki","comics","items","prices","textObjects","checkAvailableImage","imageStyle","test"],"sourceRoot":""}