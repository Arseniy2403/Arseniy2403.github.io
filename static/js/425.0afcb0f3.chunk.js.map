{"version":3,"file":"static/js/425.0afcb0f3.chunk.js","mappings":"8OAsFA,EA5EmB,WACf,IAAAA,GAAoCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAChCI,GAA8CL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAtDE,EAAeD,EAAA,GAAEE,EAAkBF,EAAA,GAC1CG,GAA4BT,EAAAA,EAAAA,UAAS,GAAEU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAhCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAAsCb,EAAAA,EAAAA,WAAS,GAAMc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAA9CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAElCG,GAAwCC,EAAAA,EAAAA,KAAjCC,EAAOF,EAAPE,QAASC,EAAKH,EAALG,MAAOC,EAAaJ,EAAbI,eAEvBC,EAAAA,EAAAA,YAAU,WACNC,EAAUZ,GAAQ,EACtB,GAAG,IAEH,IAAMY,EAAY,SAACZ,EAAQa,GACbhB,GAAVgB,GAEAH,EAAc,SAAU,EAAGV,GACtBc,KAAKC,EACd,EAEMA,EAAqB,SAACC,GACxB,IAAIC,GAAQ,EACRD,EAAcE,OAAS,IACvBD,GAAQ,GAGZxB,GAAc,SAAAD,GAAU,SAAA2B,QAAAC,EAAAA,EAAAA,GAAQ5B,IAAU4B,EAAAA,EAAAA,GAAKJ,GAAa,IAC5Df,GAAU,SAAAD,GAAM,OAAIA,EAAS,CAAC,IAC9BH,GAAmB,GACnBQ,EAAeY,EACnB,EAwBMI,EAtBc,SAACC,GACjB,IAAMC,EAAQD,EAAIE,KAAI,SAACC,EAAMC,GACzB,IAAOC,EAAoCF,EAApCE,MAAOC,EAA6BH,EAA7BG,MAAYC,GAAiBJ,EAAtBK,IAAsBL,EAAjBI,WAAWE,EAAMN,EAANM,GAErC,OACIC,EAAAA,EAAAA,KAAA,MAAYC,UAAU,eAAcC,UAChCC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,GAAE,uBAAAlB,OAAyBY,GAAKG,SAAA,EAClCF,EAAAA,EAAAA,KAAA,OAAKM,IAAKT,EAAWU,IAAKZ,EAAOM,UAAU,sBAC3CD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBC,SAAEP,KACpCK,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBAAoBC,SAAEN,QAJpCF,EAQjB,IAEA,OACIM,EAAAA,EAAAA,KAAA,MAAIC,UAAU,eAAcC,SACnBX,GAGjB,CAEkBiB,CAAYhD,GAExBiD,EAAehC,GAAQuB,EAAAA,EAAAA,KAACU,EAAAA,EAAY,IAAK,KACzCC,EAAUnC,IAAYZ,GAAkBoC,EAAAA,EAAAA,KAACY,EAAAA,EAAc,IAAK,KAElE,OACIT,EAAAA,EAAAA,MAAAU,EAAAA,SAAA,CAAAX,SAAA,EACIF,EAAAA,EAAAA,KAACc,EAAAA,EAAS,KACVX,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,CACpBb,EACAsB,EACAF,GACLT,EAAAA,EAAAA,KAAA,UAAQC,UAAU,mCACVc,SAAUnD,EACVoD,MAAO,CAAC,QAAW5C,EAAc,OAAS,SAC1C6C,QAAS,kBAAMrC,EAAUZ,GAAQ,EAAM,EAACkC,UAC5CF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOC,SAAC,qBAK3C,EC1EA,EARmB,WACf,OACIF,EAAAA,EAAAA,KAAAa,EAAAA,SAAA,CAAAX,UACIF,EAAAA,EAAAA,KAACkB,EAAU,KAGvB,C,iFCJe,SAAS9B,EAAmBE,GACzC,OCJa,SAA4BA,GACzC,GAAI6B,MAAMC,QAAQ9B,GAAM,OAAO,EAAA+B,EAAA,GAAiB/B,EAClD,CDES,CAAkBA,IELZ,SAA0BgC,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMM,KAAKH,EACtH,CFGmC,CAAgBhC,KAAQ,EAAAoC,EAAA,GAA2BpC,IGLvE,WACb,MAAM,IAAIqC,UAAU,uIACtB,CHG8F,EAC9F,C","sources":["components/comicsList/ComicsList.js","components/pages/ComicsPage.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport useMarvelService from \"../../services/MarvelService\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport LoadingSpinner from \"../spinner/LoadingSpinner\";\nimport AppBanner from \"../appBanner/AppBanner\";\n\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemsLoading, setNewItemsLoading] = useState(false);\n    const [offset, setOffset] = useState(0);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const {loading, error, getMarvelData} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, []);\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemsLoading(false) : setNewItemsLoading(true);\n\n        getMarvelData('comics', 8, offset)\n            .then(onComicsListLoaded);\n    }\n\n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if (newComicsList.length < 8) {\n            ended = true;\n        }\n\n        setComicsList(comicsList => [...comicsList, ...newComicsList]);\n        setOffset(offset => offset + 8);\n        setNewItemsLoading(false);\n        setComicsEnded(ended);\n    }\n\n    const renderItems = (arr) => {\n        const items = arr.map((item, i) => {\n            const {title, price, url, thumbnail, id} = item;\n\n            return (\n                <li key={i} className=\"comics__item\">\n                    <Link to={`/marvel_info/comics/${id}`}>\n                        <img src={thumbnail} alt={title} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{title}</div>\n                        <div className=\"comics__item-price\">{price}</div>\n                    </Link>\n                </li>\n            )\n        })\n\n        return (\n            <ul className=\"comics__grid\">\n                    {items}\n                </ul>\n        )\n    }\n\n    const itemsList = renderItems(comicsList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemsLoading ? <LoadingSpinner/> : null;\n\n    return (\n        <>\n            <AppBanner/>\n            <div className=\"comics__list\">\n                    {itemsList}\n                    {spinner}\n                    {errorMessage}\n                <button className=\"button button__main button__long\"\n                        disabled={newItemsLoading}\n                        style={{'display': comicsEnded ? 'none' : 'block'}}\n                        onClick={() => onRequest(offset, false)}>\n                    <div className=\"inner\">Load More</div>\n                </button>\n            </div>\n        </>\n    )\n}\n\nexport default ComicsList;","import ComicsList from \"../comicsList/ComicsList\";\n\nconst ComicsPage = () => {\n    return (\n        <>\n            <ComicsList/>\n        </>\n    )\n}\n\nexport default ComicsPage;","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["_useState","useState","_useState2","_slicedToArray","comicsList","setComicsList","_useState3","_useState4","newItemsLoading","setNewItemsLoading","_useState5","_useState6","offset","setOffset","_useState7","_useState8","comicsEnded","setComicsEnded","_useMarvelService","useMarvelService","loading","error","getMarvelData","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","concat","_toConsumableArray","itemsList","arr","items","map","item","i","title","price","thumbnail","url","id","_jsx","className","children","_jsxs","Link","to","src","alt","renderItems","errorMessage","ErrorMessage","spinner","LoadingSpinner","_Fragment","AppBanner","disabled","style","onClick","ComicsList","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}